{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["\nimport flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nlet userSelectedDate;\nlet timeInterval;\n\n\nconst inputTime = document.querySelector('#datetime-picker');\nconst startBtn = document.querySelector('button');\nconst showTime = document.querySelectorAll('.value');\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n    console.log(userSelectedDate);\n  },\n};\n\n//==============================================\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nstartBtn.disabled = true;\n\nconst calendar = flatpickr(\"#datetime-picker\", options);\n\nstartBtn.disabled = false;\n\nstartBtn.addEventListener('click', event => {\n  const intervalId = setInterval(() => {\n      event.preventDefault();\n    timeInterval = userSelectedDate - new Date();\n   console.log(timeInterval);\n    inputTime.disabled = true;\n\n    if (timeInterval < 1) {\n      \n      iziToast.error({\n        position: 'topCenter',\n        message: `Please choose a date in the future`\n      });\n\n    \n      clearInterval(intervalId);\n      return;\n    }\n\n    const timer = convertMs(timeInterval);\n    \n\n    showTime[0].textContent = timer.days.toString().padStart(2, '0');\n    showTime[1].textContent= timer.hours.toString().padStart(2, '0');\n    showTime[2].textContent = timer.minutes.toString().padStart(2, '0');\n    showTime[3].textContent = timer.seconds.toString().padStart(2, '0');\n      }, 1000);\n});\n\n\n\n"],"names":["userSelectedDate","timeInterval","inputTime","startBtn","showTime","options","selectedDates","convertMs","ms","days","hours","minutes","seconds","flatpickr","event","intervalId","iziToast","timer"],"mappings":"2FAOA,IAAIA,EACAC,EAGJ,MAAMC,EAAY,SAAS,cAAc,kBAAkB,EACrDC,EAAW,SAAS,cAAc,QAAQ,EAC1CC,EAAW,SAAS,iBAAiB,QAAQ,EAE7CC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBN,EAAmBM,EAAc,CAAC,EAClC,QAAQ,IAAIN,CAAgB,CAC7B,CACH,EAIA,SAASO,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEAT,EAAS,SAAW,GAEHU,EAAU,mBAAoBR,CAAO,EAEtDF,EAAS,SAAW,GAEpBA,EAAS,iBAAiB,QAASW,GAAS,CAC1C,MAAMC,EAAa,YAAY,IAAM,CAMnC,GALED,EAAM,eAAc,EACtBb,EAAeD,EAAmB,IAAI,KACvC,QAAQ,IAAIC,CAAY,EACvBC,EAAU,SAAW,GAEjBD,EAAe,EAAG,CAEpBe,EAAS,MAAM,CACb,SAAU,YACV,QAAS,oCACjB,CAAO,EAGD,cAAcD,CAAU,EACxB,MACD,CAED,MAAME,EAAQV,EAAUN,CAAY,EAGpCG,EAAS,CAAC,EAAE,YAAca,EAAM,KAAK,SAAQ,EAAG,SAAS,EAAG,GAAG,EAC/Db,EAAS,CAAC,EAAE,YAAaa,EAAM,MAAM,SAAQ,EAAG,SAAS,EAAG,GAAG,EAC/Db,EAAS,CAAC,EAAE,YAAca,EAAM,QAAQ,SAAQ,EAAG,SAAS,EAAG,GAAG,EAClEb,EAAS,CAAC,EAAE,YAAca,EAAM,QAAQ,SAAQ,EAAG,SAAS,EAAG,GAAG,CAC/D,EAAE,GAAI,CACb,CAAC"}